#!/usr/bin/ruby

module SAFTest

$: << "%s/lib" % [ENV['SAFTEST_ROOT']]
require 'SAFTestCase'

clmDir = "%s/cases/clm" % [ENV['SAFTEST_ROOT']]
$: << clmDir
require 'CLMTestDriver'

class DispatchAllCase < SAFTestCase
    @@TIMES_TO_RUN = 3

    def initialize()
        super()
    end
     
    def run()
        d = CLMTestDriver.getRandomLongLivedDriver()
        session = d.getRandomLongLivedSession(:DISPATCH_FLAGS => 
                                              "SAFTEST_DISPATCH_NONE")
        invocation = d.generateInvocation()
        d.clusterNodeGetResetCBCount(:SESSION => session)
        d.clusterNodeGetCBCount(:SESSION => session, :EXPECTED_COUNT => 0)
        @@TIMES_TO_RUN.times do
            d.clusterNodeGetAsyncWithInvocation(:SESSION => session, 
                                                :INVOCATION => invocation,
                                                :NODE_ID => "SA_CLM_LOCAL_NODE_ID")
        end
        d.dispatch(:SESSION => session, 
                   :DISPATCH_FLAGS => "SA_DISPATCH_ALL")
        d.clusterNodeGetCBCount(:SESSION => session, 
                                :EXPECTED_COUNT => @@TIMES_TO_RUN)
        passed()
    end
end

test = DispatchAllCase.new()
test.run()

end # module
