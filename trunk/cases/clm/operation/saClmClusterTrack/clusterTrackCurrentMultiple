#!/usr/bin/ruby

module SAFTest

$: << "%s/lib" % [ENV['SAFTEST_ROOT']]
require 'SAFTestCase'
require 'SAFTestUtils'

clmDir = "%s/cases/clm" % [ENV['SAFTEST_ROOT']]
$: << clmDir
require 'CLMTestDriver'

class ClusterTrackCurrentMultipleCase < SAFTestCase
    @@TIMES_TO_RUN = 5
    def initialize()
        super()
    end

    def run()
        d = CLMTestDriver.getRandomLongLivedDriver()
        session = d.getMainLongLivedSession()
        d.clusterTrackResetCBCount(:SESSION => session)
        @@TIMES_TO_RUN.times do 
            d.clusterTrack(:SESSION => session, 
                           :TRACK_CURRENT => true,
                           :NULL_NOTIFICATION_BUFFER => true)
        end
        d.waitForClusterTrackCBCount(:SESSION => session, 
                                     :EXPECTED_COUNT => @@TIMES_TO_RUN)
        passed()
    end
end

test = ClusterTrackCurrentMultipleCase.new()
test.run()

end # module
